// ignore_for_file: prefer_const_constructors

import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:flutter_markdown/flutter_markdown.dart';
import 'package:get/get.dart';
import 'package:markdown/markdown.dart' as md;
import 'package:vulnerability_management/Controllers/report_controller.dart';

class ReportDialog extends StatelessWidget {
  final int? index;
  const ReportDialog({Key? key, this.index}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return (AlertDialog(
      backgroundColor: Color.fromARGB(255, 42, 44, 59),
      title: const Text('View Report'),
      content: SizedBox(
        width: double.maxFinite,
        child: ListView(
          shrinkWrap: true,
          children: <Widget>[
            DialogCodeSnippet(index: index),
            // Text('Would you like to approve of this message?'),
          ],
        ),
      ),
      actions: <Widget>[
        TextButton(
          child: const Text('Close'),
          onPressed: () {
            Navigator.of(context).pop();
          },
        ),
      ],
    ));
  }
}

class DialogCodeSnippet extends StatelessWidget {
  //State<DialogCodeSnippet> {
  final int? index;
  const DialogCodeSnippet({Key? key, @required this.index}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    print(context);
    final controller = ScrollController();
    final ReportController reportController = Get.put(ReportController());
    //Assume it wont be null!
    //use widget.index if you grab from stateful widget
    var jsonReportObject = reportController.listReport[index!];
    var jsonReportTitle = jsonReportObject.title;
    var jsonReportDate = jsonReportObject.date;

    var jsonReportFile = jsonReportObject.result;

    String markdownData =
        """## Report from: $jsonReportTitle \n\n ### Date: $jsonReportDate \n\n ```js \n $jsonReportFile \n``` """;

    return SizedBox(
      height: MediaQuery.of(context).size.height / 2,
      child: Markdown(
        controller: controller,
        selectable: true,
        data: markdownData,
        imageDirectory: 'https://raw.githubusercontent.com',
        extensionSet: md.ExtensionSet.gitHubFlavored,
        // extensionSet: md.ExtensionSet(
        //   md.ExtensionSet.gitHubFlavored.blockSyntaxes,
        //   [md.EmojiSyntax(), ...md.ExtensionSet.gitHubFlavored.inlineSyntaxes],
        // ),
      ),
    );
    // child: Scaffold(
    //   body: SafeArea(
    //     child: Markdown(
    //       controller: controller,
    //       selectable: true,
    //       data: markdownData,
    //       imageDirectory: 'https://raw.githubusercontent.com',
    //       extensionSet: md.ExtensionSet(
    //         md.ExtensionSet.gitHubFlavored.blockSyntaxes,
    //         [
    //           md.EmojiSyntax(),
    //           ...md.ExtensionSet.gitHubFlavored.inlineSyntaxes
    //         ],
    //       ),
    //     ),
    //   ),
    // ));
  }
}
