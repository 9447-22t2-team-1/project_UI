// ignore_for_file: prefer_const_constructors

import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:flutter_markdown/flutter_markdown.dart';
import 'package:get/get.dart';
import 'package:markdown/markdown.dart' as md;
import 'package:vulnerability_management/Controllers/report_controller.dart';

class ReportDialog extends StatelessWidget {
  final int? index;
  const ReportDialog({Key? key, this.index}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return (AlertDialog(
      title: const Text('View Report'),
      content: SizedBox(
        width: double.maxFinite,
        child: ListView(
          shrinkWrap: true,
          children: <Widget>[
            DialogCodeSnippet(index: index),
            Text('Would you like to approve of this message?'),
          ],
        ),
      ),
      actions: <Widget>[
        TextButton(
          child: const Text('Approve'),
          onPressed: () {
            Navigator.of(context).pop();
          },
        ),
      ],
    ));
  }
}

class DialogCodeSnippet extends StatefulWidget {
  final int? index;
  const DialogCodeSnippet({Key? key, @required this.index}) : super(key: key);

  @override
  State<DialogCodeSnippet> createState() => _DialogCodeSnippetState();
}

class _DialogCodeSnippetState extends State<DialogCodeSnippet> {
  @override
  Widget build(BuildContext context) {
    print(context);
    final controller = ScrollController();
    final ReportController reportController = Get.put(ReportController());
    //Assume it wont be null!
    var jsonReport = reportController.listReport[widget.index!].result;

    String markdownData = """ 
    $jsonReport
    """;

    return SizedBox(
        height: MediaQuery.of(context).size.height / 2,
        child: Scaffold(
          body: SafeArea(
            child: Markdown(
              controller: controller,
              selectable: true,
              data: markdownData,
              imageDirectory: 'https://raw.githubusercontent.com',
              extensionSet: md.ExtensionSet(
                md.ExtensionSet.gitHubFlavored.blockSyntaxes,
                [
                  md.EmojiSyntax(),
                  ...md.ExtensionSet.gitHubFlavored.inlineSyntaxes
                ],
              ),
            ),
          ),
        ));
  }
}
